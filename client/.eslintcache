[{"D:\\horizon-soft-web\\client\\src\\index.js":"1","D:\\horizon-soft-web\\client\\src\\reportWebVitals.js":"2","D:\\horizon-soft-web\\client\\src\\App.js":"3","D:\\horizon-soft-web\\client\\src\\Pages\\AboutPage.js":"4","D:\\horizon-soft-web\\client\\src\\Components\\Footer.js":"5","D:\\horizon-soft-web\\client\\src\\Pages\\Services.js":"6","D:\\horizon-soft-web\\client\\src\\Pages\\Home.js":"7","D:\\horizon-soft-web\\client\\src\\Pages\\ContactPage.js":"8","D:\\horizon-soft-web\\client\\src\\Components\\TopContainer.js":"9","D:\\horizon-soft-web\\client\\src\\Components\\Banner.js":"10","D:\\horizon-soft-web\\client\\src\\Sections\\AboutUs.js":"11","D:\\horizon-soft-web\\client\\src\\Sections\\OurTeam.js":"12","D:\\horizon-soft-web\\client\\src\\Sections\\JoinUs.js":"13","D:\\horizon-soft-web\\client\\src\\Sections\\ContactUs.js":"14","D:\\horizon-soft-web\\client\\src\\Sections\\Reviews.js":"15","D:\\horizon-soft-web\\client\\src\\Components\\ServiceCard.js":"16","D:\\horizon-soft-web\\client\\src\\Components\\team-card.js":"17","D:\\horizon-soft-web\\client\\src\\Components\\ReviewCard.js":"18","D:\\horizon-soft-web\\client\\src\\Sections\\Technologies.js":"19","D:\\horizon-soft-web\\client\\src\\Pages\\TechPage.js":"20","D:\\horizon-soft-web\\client\\src\\Components\\TechNameBtn.js":"21","D:\\horizon-soft-web\\client\\src\\Sections\\WhyHorizon.js":"22","D:\\horizon-soft-web\\client\\src\\Components\\WhySecCard.js":"23","D:\\horizon-soft-web\\client\\src\\Pages\\AdminAuth.js":"24","D:\\horizon-soft-web\\client\\src\\Pages\\Admin.js":"25","D:\\horizon-soft-web\\client\\src\\Components\\AdminSideBar.js":"26","D:\\horizon-soft-web\\client\\src\\AdminSubPages\\Home.js":"27","D:\\horizon-soft-web\\client\\src\\AdminSubPages\\Reviews.js":"28","D:\\horizon-soft-web\\client\\src\\AdminSubPages\\Services.js":"29","D:\\horizon-soft-web\\client\\src\\AdminSubPages\\Members.js":"30","D:\\horizon-soft-web\\client\\src\\Components\\NavBar.js":"31","D:\\horizon-soft-web\\client\\src\\Sections\\MainBanner.js":"32","D:\\horizon-soft-web\\client\\src\\Components\\MySlider.js":"33","D:\\horizon-soft-web\\client\\src\\Pages\\UIUXDesgin.js":"34","D:\\horizon-soft-web\\client\\src\\Pages\\MobileApp.js":"35","D:\\horizon-soft-web\\client\\src\\Components\\MobileCard.js":"36","D:\\horizon-soft-web\\client\\src\\Components\\MobileTechDiv.js":"37","D:\\horizon-soft-web\\client\\src\\Sections\\NewServices.js":"38","D:\\horizon-soft-web\\client\\src\\Components\\NewServiceCard.js":"39","D:\\horizon-soft-web\\client\\src\\Pages\\CustomSoftDev.js":"40","D:\\horizon-soft-web\\client\\src\\Sections\\TotalSummary.js":"41","D:\\horizon-soft-web\\client\\src\\Components\\BigTiles.js":"42","D:\\horizon-soft-web\\client\\src\\Sections\\TechStack.js":"43","D:\\horizon-soft-web\\client\\src\\Components\\TechCard.js":"44"},{"size":547,"mtime":1608993758538,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"46"},{"size":1332,"mtime":1612785124600,"results":"48","hashOfConfig":"46"},{"size":636,"mtime":1612686008150,"results":"49","hashOfConfig":"46"},{"size":2724,"mtime":1611661541161,"results":"50","hashOfConfig":"46"},{"size":378,"mtime":1612685902561,"results":"51","hashOfConfig":"46"},{"size":756,"mtime":1612685849325,"results":"52","hashOfConfig":"46"},{"size":1260,"mtime":1610192347091,"results":"53","hashOfConfig":"46"},{"size":422,"mtime":1609571930729,"results":"54","hashOfConfig":"46"},{"size":508,"mtime":1612708822410,"results":"55","hashOfConfig":"46"},{"size":1534,"mtime":1610192609371,"results":"56","hashOfConfig":"46"},{"size":1359,"mtime":1612367200671,"results":"57","hashOfConfig":"46"},{"size":733,"mtime":1609137746594,"results":"58","hashOfConfig":"46"},{"size":2925,"mtime":1611765607296,"results":"59","hashOfConfig":"46"},{"size":748,"mtime":1612366986956,"results":"60","hashOfConfig":"46"},{"size":624,"mtime":1609056537253,"results":"61","hashOfConfig":"46"},{"size":738,"mtime":1609060492058,"results":"62","hashOfConfig":"46"},{"size":1077,"mtime":1609414541869,"results":"63","hashOfConfig":"46"},{"size":916,"mtime":1610197134552,"results":"64","hashOfConfig":"46"},{"size":4349,"mtime":1610191990837,"results":"65","hashOfConfig":"46"},{"size":291,"mtime":1610184912547,"results":"66","hashOfConfig":"46"},{"size":1731,"mtime":1613048120751,"results":"67","hashOfConfig":"46"},{"size":397,"mtime":1610196391100,"results":"68","hashOfConfig":"46"},{"size":2224,"mtime":1612171341242,"results":"69","hashOfConfig":"46"},{"size":1962,"mtime":1612181544428,"results":"70","hashOfConfig":"46"},{"size":1183,"mtime":1611672524530,"results":"71","hashOfConfig":"46"},{"size":707,"mtime":1612181322943,"results":"72","hashOfConfig":"46"},{"size":6514,"mtime":1612181738342,"results":"73","hashOfConfig":"46"},{"size":5654,"mtime":1612181783467,"results":"74","hashOfConfig":"46"},{"size":7509,"mtime":1612181679674,"results":"75","hashOfConfig":"46"},{"size":1609,"mtime":1612448408425,"results":"76","hashOfConfig":"46"},{"size":2307,"mtime":1612348068444,"results":"77","hashOfConfig":"46"},{"size":1151,"mtime":1612366893005,"results":"78","hashOfConfig":"46"},{"size":176,"mtime":1612444388780,"results":"79","hashOfConfig":"46"},{"size":8266,"mtime":1612708799011,"results":"80","hashOfConfig":"46"},{"size":406,"mtime":1612615612234,"results":"81","hashOfConfig":"46"},{"size":771,"mtime":1612686095956,"results":"82","hashOfConfig":"46"},{"size":2956,"mtime":1612785238103,"results":"83","hashOfConfig":"46"},{"size":642,"mtime":1612708579604,"results":"84","hashOfConfig":"46"},{"size":5881,"mtime":1613047515636,"results":"85","hashOfConfig":"46"},{"size":1943,"mtime":1612788441394,"results":"86","hashOfConfig":"46"},{"size":494,"mtime":1613031488807,"results":"87","hashOfConfig":"46"},{"size":2199,"mtime":1613043409102,"results":"88","hashOfConfig":"46"},{"size":558,"mtime":1613042567118,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"11plct3",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"D:\\horizon-soft-web\\client\\src\\index.js",[],["184","185"],"D:\\horizon-soft-web\\client\\src\\reportWebVitals.js",[],"D:\\horizon-soft-web\\client\\src\\App.js",[],"D:\\horizon-soft-web\\client\\src\\Pages\\AboutPage.js",[],"D:\\horizon-soft-web\\client\\src\\Components\\Footer.js",[],"D:\\horizon-soft-web\\client\\src\\Pages\\Services.js",[],"D:\\horizon-soft-web\\client\\src\\Pages\\Home.js",[],"D:\\horizon-soft-web\\client\\src\\Pages\\ContactPage.js",[],"D:\\horizon-soft-web\\client\\src\\Components\\TopContainer.js",[],"D:\\horizon-soft-web\\client\\src\\Components\\Banner.js",[],"D:\\horizon-soft-web\\client\\src\\Sections\\AboutUs.js",[],"D:\\horizon-soft-web\\client\\src\\Sections\\OurTeam.js",[],"D:\\horizon-soft-web\\client\\src\\Sections\\JoinUs.js",[],"D:\\horizon-soft-web\\client\\src\\Sections\\ContactUs.js",[],"D:\\horizon-soft-web\\client\\src\\Sections\\Reviews.js",[],"D:\\horizon-soft-web\\client\\src\\Components\\ServiceCard.js",[],["186","187"],"D:\\horizon-soft-web\\client\\src\\Components\\team-card.js",[],"D:\\horizon-soft-web\\client\\src\\Components\\ReviewCard.js",[],"D:\\horizon-soft-web\\client\\src\\Sections\\Technologies.js",[],"D:\\horizon-soft-web\\client\\src\\Pages\\TechPage.js",[],"D:\\horizon-soft-web\\client\\src\\Components\\TechNameBtn.js",[],"D:\\horizon-soft-web\\client\\src\\Sections\\WhyHorizon.js",[],"D:\\horizon-soft-web\\client\\src\\Components\\WhySecCard.js",[],"D:\\horizon-soft-web\\client\\src\\Pages\\AdminAuth.js",[],"D:\\horizon-soft-web\\client\\src\\Pages\\Admin.js",[],"D:\\horizon-soft-web\\client\\src\\Components\\AdminSideBar.js",[],"D:\\horizon-soft-web\\client\\src\\AdminSubPages\\Home.js",["188"],"import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction AdminHome() {\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        const checkAuth = async () => {\r\n            await axios.get(\"/auth/check-auth\", { headers: { \"x-auth-token\": localStorage.getItem('token') } })\r\n                .then(res => {\r\n                    console.log(\"u logged in!\")\r\n                }).catch(error => {\r\n                    history.push(\"/admin/auth\");\r\n                });\r\n        }\r\n        checkAuth();\r\n    }, [])\r\n    return <div className=\"text-center pt-5\">\r\n        <h1>Admin Home</h1>\r\n    </div>\r\n}\r\nexport default AdminHome;","D:\\horizon-soft-web\\client\\src\\AdminSubPages\\Reviews.js",["189"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Card, Col, Table, Button, Modal, Form, Image } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FaTrash } from 'react-icons/fa';\r\n\r\nfunction AdminReviews() {\r\n\r\n    const history = useHistory()\r\n    const [show, setShow] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [reviews, setReviews] = useState([]);\r\n    const [formObj, setFormObj] = useState({\r\n        name: \"\",\r\n        job: \"\",\r\n        review: \"\",\r\n        rating: \"\"\r\n    });\r\n    const [img, setImg] = useState(null);\r\n    const [run, setRun] = useState(false);\r\n    useEffect(() => {\r\n        const getMembers = async () => {\r\n            await axios.get(\"/admin/get-reviews\", { headers: { \"x-auth-token\": localStorage.getItem('token') } })\r\n                .then(res => {\r\n                    setReviews(res.data.reviews);\r\n                }).catch(error => {\r\n                    history.push(\"/admin/auth\");\r\n                });\r\n        }\r\n        getMembers();\r\n    }, [run]);\r\n\r\n\r\n    const handleChange = e => {\r\n        setFormObj({ ...formObj, [e.target.name]: e.target.value });\r\n    }\r\n    const handleFile = e => {\r\n        setImg(e.target.files[0]);\r\n    }\r\n    const handleShow = () => {\r\n        setShow(true);\r\n    }\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        // setloading\r\n        setIsLoading(true);\r\n        const form = new FormData();\r\n        form.append('name', formObj.name);\r\n        form.append('job', formObj.job);\r\n        form.append('image', img);\r\n        form.append('review', formObj.review);\r\n        form.append('rating', formObj.rating);\r\n        await axios.post(\"/admin/add-review\", form)\r\n            .then(res => {\r\n                setFormObj({\r\n                    name: \"\",\r\n                    job: \"\",\r\n                    review: \"\",\r\n                    rating: \"\"\r\n                });\r\n                setImg(null);\r\n                setIsLoading(false);\r\n                setRun(!run);\r\n                setShow(false);\r\n            }).catch(error => {\r\n                setIsLoading(false);\r\n                throw error;\r\n            });\r\n    }\r\n    // handle Delete\r\n    const handleDelete = async (id, img) => {\r\n        window.confirm(\"Are u sure u want to delete ?\") &&\r\n            await axios.delete('/admin/delete-review/' + id + \"/\" + img)\r\n                .then(res => {\r\n                    setRun(!run);\r\n                }).catch(error => {\r\n                    throw error;\r\n                });\r\n    }\r\n    return <Container>\r\n        <Card className=\"mt-5\">\r\n            <Card.Header>\r\n                <Card.Title>Reviews Section</Card.Title>\r\n                <Card.Text>This Table shows all the reviews which are presend in your website</Card.Text>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Job</th>\r\n                            <th>Image</th>\r\n                            <th>Review</th>\r\n                            <th>Rating</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {reviews.map((r, i) => (<tr key={i}>\r\n                            <td>{i + 1}</td>\r\n                            <td>{r.name}</td>\r\n                            <td>{r.job}</td>\r\n                            <td><Image src={\"/static/images/\" + r.img} height=\"70\" width=\"70\" /></td>\r\n                            <td>{r.review}</td>\r\n                            <td>{String(r.rating)}</td>\r\n                            <td><Button type=\"button\" variant=\"primary\" onClick={() => handleDelete(r._id, r.img)} size=\"sm\"><FaTrash /></Button></td>\r\n                        </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </Card.Body>\r\n        </Card>\r\n        <Card className=\"mt-4 text-center\">\r\n            <Card.Body>\r\n                <Button variant=\"primary\" type=\"button\" onClick={handleShow}>Add Review</Button>\r\n            </Card.Body>\r\n        </Card>\r\n        <Modal size=\"lg\" show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add Review</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"name\" placeholder=\"Enter Name\" value={formObj.name} onChange={handleChange} required />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Job</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"job\" placeholder=\"Enter Job\" value={formObj.job} onChange={handleChange} required />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.File label=\"Example file input\" name=\"image\" onChange={handleFile} required />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Group>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control type=\"number\" name=\"rating\" placeholder=\"Enter rating number\" value={formObj.rating} onChange={handleChange} required />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label>Review</Form.Label>\r\n                        <Form.Control as=\"textarea\" placeholder=\"Enter Review\" rows={3} name=\"review\" value={formObj.review} onChange={handleChange} required />\r\n                    </Form.Group>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                        <Button variant=\"primary\" type=\"submit\" disabled={isLoading && true}>Save Changes</Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    </Container>\r\n}\r\nexport default AdminReviews;","D:\\horizon-soft-web\\client\\src\\AdminSubPages\\Services.js",["190"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Card, Col, Table, Button, Modal, Form, Image } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FaTrash } from 'react-icons/fa';\r\n\r\nfunction AdminServices() {\r\n    const history = useHistory();\r\n    const [show, setShow] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [services, setServices] = useState([]);\r\n\r\n    const [formObj, setFormObj] = useState({\r\n        title: \"\",\r\n        text: \"\"\r\n    });\r\n    const [run, setRun] = useState(false);\r\n    const [img, setImg] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getMembers = async () => {\r\n            await axios.get(\"/admin/get-services\", { headers: { \"x-auth-token\": localStorage.getItem('token') } })\r\n                .then(res => {\r\n                    setServices(res.data.services);\r\n                }).catch(error => {\r\n                    history.push(\"/admin/auth\");\r\n                });\r\n        }\r\n        getMembers();\r\n    }, [run]);\r\n\r\n\r\n    const handleChange = e => {\r\n        setFormObj({ ...formObj, [e.target.name]: e.target.value });\r\n    }\r\n    const handleFile = e => {\r\n        setImg(e.target.files[0]);\r\n    }\r\n    const handleShow = () => {\r\n        setShow(true);\r\n    }\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        const form = new FormData();\r\n        form.append('image', img);\r\n        form.append('title', formObj.title);\r\n        form.append('text', formObj.text);\r\n        await axios.post(\"/admin/add-service\", form)\r\n            .then(res => {\r\n                setFormObj({\r\n                    title: \"\",\r\n                    text: \"\"\r\n                });\r\n                setImg(null);\r\n                setIsLoading(false);\r\n                setRun(!run);\r\n                setShow(false);\r\n            }).catch(error => {\r\n                setIsLoading(false);\r\n                throw error;\r\n            });\r\n    }\r\n\r\n    // handle Delete\r\n    const handleDelete = async (id, img) => {\r\n        window.confirm(\"Are u sure u want to delete ?\") &&\r\n            await axios.delete('/admin/delete-service/' + id + \"/\" + img)\r\n                .then(res => {\r\n                    setRun(!run);\r\n                }).catch(error => {\r\n                    throw error;\r\n                });\r\n    }\r\n    return <Container>\r\n        <Card className=\"mt-5\">\r\n            <Card.Header>\r\n                <Card.Title>Services Section</Card.Title>\r\n                <Card.Text>This Table shows all the services which are presend in your website</Card.Text>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Title</th>\r\n                            <th>Image</th>\r\n                            <th>Text</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {services.map((service, i) => {\r\n                            return <tr key={i}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{service.title}</td>\r\n                                <td><Image src={\"/static/images/\" + service.img} height=\"70\" width=\"70\" /></td>\r\n                                <td>{service.text}</td>\r\n                                <td><Button type=\"button\" variant=\"primary\" onClick={() => handleDelete(service._id, service.img)} size=\"sm\"><FaTrash /></Button></td>\r\n                            </tr>\r\n                        })}\r\n\r\n                    </tbody>\r\n                </Table>\r\n            </Card.Body>\r\n        </Card>\r\n        <Card className=\"mt-4 text-center\">\r\n            <Card.Body>\r\n                <Button variant=\"primary\" type=\"button\" onClick={handleShow}>Add Service</Button>\r\n            </Card.Body>\r\n        </Card>\r\n        <Modal size=\"lg\" show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add Service</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"title\" placeholder=\"Enter Name\" value={formObj.title} onChange={handleChange} required />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.File label=\"Example file input\" name=\"image\" onChange={handleFile} required />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Group>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" placeholder=\"Enter Description\" rows={3} name=\"text\" value={formObj.text} onChange={handleChange} required />\r\n                    </Form.Group>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                        <Button variant=\"primary\" type=\"submit\" disabled={isLoading && true}>Save Changes</Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    </Container>\r\n}\r\nexport default AdminServices;","D:\\horizon-soft-web\\client\\src\\AdminSubPages\\Members.js",["191"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Card, Col, Table, Button, Modal, Form, Image } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FaTrash } from 'react-icons/fa';\r\nfunction AdminMembers() {\r\n    const history = useHistory();\r\n    const [show, setShow] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [members, setMembers] = useState([]);\r\n    const [formObj, setFormObj] = useState({\r\n        name: \"\",\r\n        job: \"\",\r\n        faceBookLink: \"\",\r\n        gmailLink: \"\",\r\n        linkedInLink: \"\",\r\n        twitterLink: \"\",\r\n    });\r\n    const [img, setImg] = useState(null);\r\n    const [run, setRun] = useState(false);\r\n    useEffect(() => {\r\n        const getMembers = async () => {\r\n            await axios.get(\"/admin/get-members\", { headers: { \"x-auth-token\": localStorage.getItem('token') } })\r\n                .then(res => {\r\n                    setMembers(res.data.members);\r\n                }).catch(error => {\r\n                    history.push(\"/admin/auth\");\r\n                });\r\n        }\r\n        getMembers();\r\n    }, [run]);\r\n\r\n\r\n    const handleChange = e => {\r\n        setFormObj({ ...formObj, [e.target.name]: e.target.value });\r\n    }\r\n    const handleFile = e => {\r\n        setImg(e.target.files[0]);\r\n    }\r\n    const handleShow = () => {\r\n        setShow(true);\r\n    }\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        // setloading\r\n        setIsLoading(true);\r\n        const form = new FormData();\r\n        form.append('name', formObj.name);\r\n        form.append('job', formObj.job);\r\n        form.append('image', img);\r\n        form.append('faceBookLink', formObj.faceBookLink);\r\n        form.append('gmailLink', formObj.gmailLink);\r\n        form.append('linkedInLink', formObj.linkedInLink);\r\n        form.append('twitterLink', formObj.twitterLink);\r\n        await axios.post(\"/admin/add-member\", form)\r\n            .then(res => {\r\n                setFormObj({\r\n                    name: \"\",\r\n                    job: \"\",\r\n                    faceBookLink: \"\",\r\n                    gmailLink: \"\",\r\n                    linkedInLink: \"\",\r\n                    twitterLink: \"\",\r\n                });\r\n                setIsLoading(false);\r\n                setRun(!run);\r\n                setShow(false);\r\n            }).catch(error => {\r\n                setIsLoading(false);\r\n                throw error;\r\n            });\r\n    }\r\n    // handle Delete\r\n    const handleDelete = async (id, img) => {\r\n        window.confirm(\"Are u sure u want to delete ?\") &&\r\n            await axios.delete('/admin/delete-member/' + id + \"/\" + img)\r\n                .then(res => {\r\n                    setRun(!run);\r\n                }).catch(error => {\r\n                    throw error;\r\n                });\r\n    }\r\n\r\n    return <Container>\r\n        <Card className=\"mt-5\">\r\n            <Card.Header>\r\n                <Card.Title>Members Section</Card.Title>\r\n                <Card.Text>This Table shows all the members which are presend in your website</Card.Text>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Job</th>\r\n                            <th>Image</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {members.map((member, i) => {\r\n                            return <tr key={i}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{member.name}</td>\r\n                                <td>{member.job}</td>\r\n                                <td><Image src={\"/static/images/\" + member.img} height=\"70\" width=\"70\" /></td>\r\n                                <td><Button type=\"button\" variant=\"primary\" onClick={() => handleDelete(member._id, member.img)} size=\"sm\"><FaTrash /></Button></td>\r\n                            </tr>\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </Card.Body>\r\n        </Card>\r\n        <Card className=\"mt-4 text-center\">\r\n            <Card.Body>\r\n                <Button variant=\"primary\" type=\"button\" onClick={handleShow}>Add New Member</Button>\r\n            </Card.Body>\r\n        </Card>\r\n        <Modal size=\"lg\" show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add new member</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"name\" placeholder=\"Enter Name\" value={formObj.name} onChange={handleChange} required />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Job</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"job\" placeholder=\"Enter Job\" value={formObj.job} onChange={handleChange} required />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.File label=\"Example file input\" name=\"image\" onChange={handleFile} required />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Face Book Address</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"faceBookLink\" placeholder=\"Enter Face book Link\" value={formObj.faceBookLink} onChange={handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Gmail Address</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"gmailLink\" placeholder=\"Enter Gmail Link\" value={formObj.gmailLink} onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Linked In Address</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"linkedInLink\" placeholder=\"Enter Linked In Address\" value={formObj.linkedInLink} onChange={handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <Form.Label>Twitter Address</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"twitterLink\" placeholder=\"Enter Twitter Address\" value={formObj.twitterLink} onChange={handleChange} />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                        <Button variant=\"primary\" type=\"submit\" disabled={isLoading && true}>Save Changes</Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    </Container>\r\n}\r\nexport default AdminMembers;","D:\\horizon-soft-web\\client\\src\\Components\\NavBar.js",[],"D:\\horizon-soft-web\\client\\src\\Sections\\MainBanner.js",[],"D:\\horizon-soft-web\\client\\src\\Components\\MySlider.js",[],"D:\\horizon-soft-web\\client\\src\\Pages\\UIUXDesgin.js",[],"D:\\horizon-soft-web\\client\\src\\Pages\\MobileApp.js",[],"D:\\horizon-soft-web\\client\\src\\Components\\MobileCard.js",[],"D:\\horizon-soft-web\\client\\src\\Components\\MobileTechDiv.js",[],"D:\\horizon-soft-web\\client\\src\\Sections\\NewServices.js",[],"D:\\horizon-soft-web\\client\\src\\Components\\NewServiceCard.js",[],"D:\\horizon-soft-web\\client\\src\\Pages\\CustomSoftDev.js",[],"D:\\horizon-soft-web\\client\\src\\Sections\\TotalSummary.js",[],"D:\\horizon-soft-web\\client\\src\\Components\\BigTiles.js",[],"D:\\horizon-soft-web\\client\\src\\Sections\\TechStack.js",[],"D:\\horizon-soft-web\\client\\src\\Components\\TechCard.js",[],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"192","replacedBy":"196"},{"ruleId":"194","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":17,"column":8,"nodeType":"200","endLine":17,"endColumn":10,"suggestions":"201"},{"ruleId":"198","severity":1,"message":"199","line":31,"column":8,"nodeType":"200","endLine":31,"endColumn":13,"suggestions":"202"},{"ruleId":"198","severity":1,"message":"199","line":30,"column":8,"nodeType":"200","endLine":30,"endColumn":13,"suggestions":"203"},{"ruleId":"198","severity":1,"message":"199","line":31,"column":8,"nodeType":"200","endLine":31,"endColumn":13,"suggestions":"204"},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],["205"],["206"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["207"],["208"],["209"],["210"],"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"213","fix":"215"},{"desc":"213","fix":"216"},"Update the dependencies array to be: [history]",{"range":"217","text":"218"},"Update the dependencies array to be: [history, run]",{"range":"219","text":"220"},{"range":"221","text":"220"},{"range":"222","text":"220"},[586,588],"[history]",[1112,1117],"[history, run]",[1081,1086],[1172,1177]]